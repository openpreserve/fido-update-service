<?xml version="1.0"?>
<formats xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xsi:noNamespaceSchemaLocation="fido-formats.xsd" version="0.3">
  <format>
    <puid>fido-fmt/189.word</puid>
    <name>Microsoft Office Open XML - Word</name>
    <extension>docx</extension>
    <has_priority_over>x-fmt/263</has_priority_over>
    <has_priority_over>fmt/189</has_priority_over>
    <signature>
      <name>Microsoft Office Open XML - Word</name>
      <pattern>
        <position>BOF</position>
        <regex>(?s)\APK\x03\x04</regex>
      </pattern>
      <pattern>
        <position>BOF</position>
        <regex>(?s)\A.{30}\[Content_Types\]\.xml \xa2</regex>
      </pattern>
      <pattern>
        <position>EOF</position>
        <regex>(?s)\x00\x00word/.{1,20}\.xmlPK\x01\x02\x2d.{0,2000}\Z</regex>
      </pattern>
    </signature>
  </format>
  <format>
    <puid>fido-fmt/189.xl</puid>
    <name>Microsoft Office Open XML - Excel</name>
    <extension>xlsx</extension>
    <has_priority_over>x-fmt/263</has_priority_over>
    <has_priority_over>fmt/189</has_priority_over>
    <signature>
      <name>Microsoft Office Open XML - Excel</name>
      <pattern>
        <position>BOF</position>
        <regex>(?s)\APK\x03\x04</regex>
      </pattern>
      <pattern>
        <position>BOF</position>
        <regex>(?s)\A.{30}\[Content_Types\]\.xml \xa2</regex>
      </pattern>
      <pattern>
        <position>EOF</position>
        <regex>(?s)\x00xl/.{1,20}\.xmlPK\x01\x02\x2d.{0,2000}\Z</regex>
      </pattern>
    </signature>
  </format>
  <format>
    <puid>fido-fmt/189.ppt</puid>
    <name>Microsoft Office Open XML - Powerpoint</name>
    <extension>pptx</extension>
    <has_priority_over>x-fmt/263</has_priority_over>
    <has_priority_over>fmt/189</has_priority_over>
    <signature>
      <name>Microsoft Office Open XML - Powerpoint</name>
      <pattern>
        <position>BOF</position>
        <regex>(?s)\APK\x03\x04</regex>
      </pattern>
      <pattern>
        <position>BOF</position>
        <regex>(?s)\A.{30}\[Content_Types\]\.xml \xa2</regex>
      </pattern>
      <pattern>
        <position>EOF</position>
        <!-- ppt/presentation.xml might be better, but it can be far from the end. -->
        <regex>(?s)\x00ppt/.{1,20}\.xmlPK\x01\x02\x2d.{0,2000}\Z</regex>
      </pattern>
    </signature>
  </format>
  <format>
    <puid>fmt/134</puid>
    <mime>audio/mpeg</mime>
    <name>MPEG 1/2 Audio Layer 3 - fido update</name>
    <pronom_id>687</pronom_id>
    <extension>mp3</extension>
    <signature>
      <name>MPEG-1/2 Audio Layer 3</name>
      <note>The pronom signatures for fmt/134 were horrendous.  This is an attempt to consolidate several
                  nearly identical patterns into one.  It is not clear if they should be BOF or EOF or both.
                  Regularly-spaced frame headers should always be discoverable near EOF. An ID3v1
                tag of up to 355 bytes may be present at EOF.</note>
      <pattern>
        <position>EOF</position>
        <regex>(?s)\xff[\xfa\xfb\xf2\xf3][\x10-\xeb].{46,1439}\xff[\xfa\xfb\xf2\xf3][\x10-\xeb].{46,1439}\Z</regex>
      </pattern>
      <pattern>
        <position>BOF</position>
        <pronom_pattern>494433</pronom_pattern>
        <regex>(?s)\AID3</regex>
      </pattern>
    </signature>
  </format>
  <format>
    <puid>fmt/40</puid>
    <mime>application/msword</mime>
    <name>Microsoft Word for Windows Document</name>
    <pronom_id>690</pronom_id>
    <extension>doc</extension>
    <has_priority_over>fmt/111</has_priority_over>
    <signature>
      <name>Microsoft Word for Windows 97 - 2002</name>
      <note>2010.12 - AF: Some of my test files do not have 8.0, but 97-2003.</note>
      <note>Compound document header + WordDocument user stream + version number</note>
      <pattern>
        <position>BOF</position>
        <pronom_pattern>D0CF11E0A1B11AE1{20}FEFF</pronom_pattern>
        <regex>(?s)\A\xd0\xcf\x11\xe0\xa1\xb1\x1a\xe1.{20}\xfe\xff</regex>
      </pattern>
      <pattern>
        <position>VAR</position>
        <pronom_pattern>57006F007200640044006F00630075006D0065006E007400{42}02(00|01)</pronom_pattern>
        <regex>(?s)W\x00o\x00r\x00d\x00D\x00o\x00c\x00u\x00m\x00e\x00n\x00t\x00.{42}\x02(?:\x00|\x01)</regex>
      </pattern>
      <pattern>
        <position>VAR</position>
        <pronom_pattern>4D6963726F736F667420576F7264(20382E30|20392E30|2031302E30|2D446F6B756D656E74)</pronom_pattern>
        <regex>(?s)Microsoft (?:Office Word|Word)(?: 8\.0| 9\.0| 10\.0|-Dokument| 97-2003)</regex>
      </pattern>
    </signature>
  </format>
  <!-- RTF -->
  <format>
    <puid>fmt/45</puid>
    <mime>application/rtf</mime>
    <mime>text/rtf</mime>
    <name>Rich Text Format</name>
    <pronom_id>626</pronom_id>
    <extension>rtf</extension>
    <signature>
      <name>RTF 1.0 - 1.4 (generic)</name>
      <note>Pronom has FIVE RTF formats (fmt/45-49) with identical patterns that don't match my sample.</note>
      <pattern>
        <position>BOF</position>
        <pronom_pattern>7B5C7274(66|6631)5C(616E7369|6D6163|7063|706361)</pronom_pattern>
        <regex>(?s)\A\{\\rt(?:f|f1)\\(?:adeflang1025|ansi|mac|pc|pca)</regex>
      </pattern>
    </signature>
  </format>
  <format>
    <puid>fmt/46</puid>
    <mime>application/rtf</mime>
    <mime>text/rtf</mime>
    <name>Rich Text Format</name>
    <pronom_id>627</pronom_id>
    <extension>rtf</extension>
    <signature>
      <name>RTF 1.0 - 1.4 (generic)</name>
      <note>\rtf control word</note>
      <pattern>
        <position>BOF</position>
        <pronom_pattern>7B5C7274(66|6631)5C(616E7369|6D6163|7063|706361)</pronom_pattern>
        <!-- HACK.  This should fail any non-empty buffer. All of the RTF signatures have the same pattern.
             This version of fido does not have a 'delete' method.
         -->
        <regex>\A\Z</regex>
      </pattern>
    </signature>
  </format>
  <format>
    <puid>fmt/47</puid>
    <mime>application/rtf</mime>
    <mime>text/rtf</mime>
    <name>Rich Text Format</name>
    <pronom_id>628</pronom_id>
    <extension>rtf</extension>
    <signature>
      <name>RTF 1.0 - 1.4 (generic)</name>
      <note>\rtf control word</note>
      <pattern>
        <position>BOF</position>
        <pronom_pattern>7B5C7274(66|6631)5C(616E7369|6D6163|7063|706361)</pronom_pattern>
        <regex>\A\Z</regex>
      </pattern>
    </signature>
  </format>
  <format>
    <puid>fmt/48</puid>
    <mime>application/rtf</mime>
    <mime>text/rtf</mime>
    <name>Rich Text Format</name>
    <pronom_id>629</pronom_id>
    <extension>rtf</extension>
    <signature>
      <name>RTF 1.0 - 1.4 (generic)</name>
      <note>\rtf control word</note>
      <pattern>
        <position>BOF</position>
        <pronom_pattern>7B5C7274(66|6631)5C(616E7369|6D6163|7063|706361)</pronom_pattern>
        <regex>\A\Z</regex>
      </pattern>
    </signature>
  </format>
  <format>
    <puid>fmt/49</puid>
    <mime>application/rtf</mime>
    <mime>text/rtf</mime>
    <name>Rich Text Format</name>
    <pronom_id>630</pronom_id>
    <extension>rtf</extension>
    <signature>
      <name>RTF 1.0 - 1.4 (generic)</name>
      <note>\rtf control word</note>
      <pattern>
        <position>BOF</position>
        <pronom_pattern>7B5C7274(66|6631)5C(616E7369|6D6163|7063|706361)</pronom_pattern>
        <regex>\A\Z</regex>
      </pattern>
    </signature>
  </format>
  <format>
  <!-- .cayra format added by <maurice.de.rooij@nationaalarchief.nl> -->
    <puid>fido-fmt/cayra</puid>
    <name>Intalev Cayra Mindmap file</name>
    <extension>cayra</extension>
    <has_priority_over>x-fmt/263</has_priority_over>
    <signature>
      <name>Intalev Cayra Mindmap file</name>
      <pattern>
        <position>BOF</position>
        <regex>(?s)\APK\x03\x04</regex>
      </pattern>
      <pattern>
        <position>BOF</position>
        <regex>(?s)\A.{30}bin\/[a-z0-9]{8}\-[a-z0-9]{4}\-[a-z0-9]{4}\-[a-z0-9]{4}\-[a-z0-9]{12}\x20\xa2</regex>
      </pattern>
      <pattern>
        <position>EOF</position>
        <regex>(?s)\[Content_Types\]\.xmlPK\x05\x06\x00.{17}\Z</regex>
      </pattern>
    </signature>
  </format>
  <format>
  <!-- .py format added by <maurice.de.rooij@nationaalarchief.nl> -->
    <puid>fido-fmt/python</puid>
    <name>Python script file</name>
    <extension>py</extension>
    <signature>
      <name>Python script file</name>
      <pattern>
        <position>BOF</position>
        <regex>(?s)\A.{0,1024}\x23\x21(?:python|\/usr\/local\/bin\/python|\/usr\/bin\/env python)</regex>
      </pattern>
    </signature>
  </format>
  <format>
  <!-- SPSS format added by <maurice.de.rooij@nationaalarchief.nl>, February 2012 -->
    <puid>fido-fmt/SPSS</puid>
    <mime>application/x-spss</mime>
    <name>SPSS file</name>
    <extension>sav</extension>
    <extension>spp</extension>
    <extension>sbs</extension>
    <extension>sps</extension>
    <extension>spo</extension>
    <extension>spv</extension>
    <signature>
      <name>SPSS Statistical Data File</name>
      <pattern>
        <position>BOF</position>
        <regex>(?s)\A\$FL2@\(#\) (IBM SPSS STATISTICS DATA FILE|PASW STATISTICS DATA FILE)</regex>
      </pattern>
    </signature>
  </format>
  <format>
  <!-- NEXUS format added by <maurice.de.rooij@nationaalarchief.nl> @SPRUCE London 2012 -->
  <!-- http://wiki.opf-labs.org/display/SPR/NeXus+Data+Collection+ISIS+-+STFC+-+solution -->
    <puid>fido-fmt/nexus</puid>
    <mime>application/octet-stream</mime>
    <name>Nexus</name>
    <extension>nxs</extension>
    <signature>
      <name>FIDO Nexus Signature</name>
      <pattern>
        <position>BOF</position>
        <regex>(?s)\A\x89\x48\x44\x46\x0d\x0a\x1a\x0a\x00{5}\x08\x08\x00\x04\x00\x10\x00{13}\xff{8}</regex>
      </pattern>
    </signature>
  </format>
  <!-- iPer Advanced Embedded Hypertext format (AEH) -->
  <!-- contributed by L. Hurley and A. Ogier -->
  <format>
    <puid>fido-fmt/aeh</puid>
    <mime>text/html</mime>
    <name>iPer Advanced Embedded Hypertext</name>
    <alias>AEH</alias>
    <extension>aeh</extension>
    <apple_uti>public.data</apple_uti>
    <signature>
      <name>AEH</name>
      <note>at BOF "ALDO"</note>
      <pattern>
        <position>BOF</position>
        <pronom_pattern>414C444F</pronom_pattern>
        <regex>(?s)\AALDO</regex>
      </pattern>
    </signature>
    <note>iPer Advanced Embedded Hypertext is a propietary file format, owned by Visual Vision, and used with the default software HyperPublish applications (formerly iPer), a comprehensive hypermedia publishing program both for Website and CDROM).</note>
    <details>
      <dc:description>iPer Advanced Embedded Hypertext is a propietary file format owned by Visual Vision.</dc:description>
      <dc:creator>Visual Vision</dc:creator>
      <dcterms:publisher>Visual Vision</dcterms:publisher>
      <content_type>hypertext</content_type>
      <reference>
        <dcterms:title>iPer Advanced Embedded Hypertext</dcterms:title>
        <dc:creator>Visual Vision</dc:creator>
        <dc:publisher>Visual Vision</dc:publisher>
        <dcterms:available>1999</dcterms:available>
        <dc:identifier>http://www.visualvision.com/</dc:identifier>
        <dc:description>iPer Advanced Embedded Hypertext is a propietary file format owned by Visual Vision.</dc:description>
        <dc:type>Authoratative</dc:type>
      </reference>
      <record_metadata>
        <status>unknown</status>  
        <dc:creator>L. Hurley and A. Ogier</dc:creator>
        <dcterms:created>01 Dec 2011</dcterms:created>
      </record_metadata>
    </details>
  </format>
  <!-- MobiPocket Reader format (MOBI) -->
  <!-- contributed by L. Hurley and A. Ogier -->
  <format>
    <puid>fido-fmt/mobi</puid>
    <mime>application/x-mobipocket-ebook</mime>
    <name>MobiPocket Reader</name>
    <version></version>
    <alias>MOBI</alias>
    <extension>mobi</extension>
    <extension>prc</extension>
    <apple_uti>public.data</apple_uti>
    <signature>
      <name>Mobi</name>
      <note>Header contains BOOK at offset 60 and MOBI at offset 64</note>
      <pattern>
        <position>BOF</position>
        <pronom_pattern>.{60}424F4F4B4D4F4249</pronom_pattern>
        <regex>(?s)\A(\.|\x00){60}BOOKMOBI</regex>
      </pattern>
    </signature>
    <details>
      <dc:description>MOBI is an ebook format created by a French company, MobiPocket Reader, and bought by Amazon in 2005. Since 2005 the mobi standard has not been updated as Amazon has focused all its attention on the azw format, which is based on the mobi format. Mobi has a high and a low compression version, although the low compression version can be used on more e-reader devices. The mobi format was based on the PalmDOC (Palm Database) Format.</dc:description>
      <dcterms:available>2000</dcterms:available>
      <dc:creator>MobiPocket</dc:creator>
      <dcterms:publisher>Amazon.com</dcterms:publisher>
        <record_metadata>
          <status>unknown</status>
          <dc:creator>L. Hurley and A. Ogier</dc:creator>
          <dcterms:created>01 Dec 2011</dcterms:created>
        </record_metadata>
    </details>
  </format>
  <!-- Protein Data Bank format (PDB) -->
  <!-- contributed by L. Hurley and A. Ogier -->
  <format>
    <puid>fido-fmt/x-pdb</puid>
    <mime>chemical/x-pdb</mime>
    <name>Protein Data Bank</name>
    <version>3.30</version>
    <alias>PDB (3.30)</alias>
    <extension>pdb</extension>
    <apple_uti>public.data</apple_uti>
    <has_priority_over>x-fmt/283</has_priority_over>
    <has_priority_over>x-fmt/111</has_priority_over>
    <signature>
      <name>PDB</name>
      <note>80 byte header record: BOF contains "HEADER" and date field (YY-MMM-DD at offset 50) and IDCode (1 digit followed by 3 alphanumeric at offset 63). Also: "END   " chunk at beginning of 80 byte footer record </note>
      <pattern>
        <position>BOF</position>
<!--        <regex>(?s)\AHEADER.{44}\d\d\-[A-Z]{3}-\d\d.{3}\d\w{3}</regex>-->
        <regex>(?s)\AHEADER.{44}[0-9]{3}\-[a-z]{3}\-[0-9]{3}.{3}[0-9]{1}[a-z]{3}</regex>
      </pattern>
      <pattern>
        <position>VAR</position>          
        <pronom_pattern>454E442020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020             2020202020202020202020202020202020202020202020202020200A</pronom_pattern>
        <regex>(?s)END\x20{77}\x0A\Z</regex>
      </pattern>
    </signature>
    <note>The Protein Data Bank (pdb) file format is the legacy file format of the Worldwide Protein Data Bank. The mission of the wwPDB is to maintain a single Protein Data Bank Archive of macromolecular structural data that is freely and publicly available to the global community. PDB is a flat textual file format describing the three dimensional structures of molecules held in the Protein Data Bank. The file consists of 80 byte records, beginning with a header and ending with an END record.</note>
    <details>
      <dc:description>PDB is a flat textual file format of macromolecular structural data in the Worldwide Protein Data Bank.</dc:description>
      <dcterms:available>1972</dcterms:available>
      <dc:creator>Brookhaven National Laboratory</dc:creator>
      <dcterms:publisher>Worldwide Protein Data Bank</dcterms:publisher>
      <content_type>ASCII text</content_type>
      <reference>
        <dc:title>Protein Data Bank</dc:title>
        <dc:creator>Brookhaven National Laboratory</dc:creator>
        <dc:publisher>Worldwide Protein Data Bank</dc:publisher>
        <dcterms:available>1972</dcterms:available>
        <dc:identifier>http://www.wwpdb.org/documentation/format33/v3.3.html</dc:identifier>
        <dc:description>PDB is a flat textual file format of macromolecular structural data in the Worldwide Protein Data Bank</dc:description>
        <dc:type>Authoratative</dc:type>
      </reference>
      <record_metadata>
        <status>unknown</status>
        <dc:creator>L. Hurley and A. Ogier</dc:creator>
        <dcterms:created>01 Dec 2011</dcterms:created>
      </record_metadata>
    </details>
  </format>
  <!-- Progressive Graphics File format (PGF) -->
  <!-- contributed by L. Hurley and A. Ogier -->
  <format>
    <puid>fido-fmt/pgf</puid>
    <name>Progressive Graphics File</name>
    <version></version>
    <alias>PGF</alias>
    <extension>pgf</extension>
    <apple_uti>public.data</apple_uti>
    <signature>
      <name>PGF (little-endian)</name>
      <note>Header begins with PGF at offset 00</note>
      <pattern>
        <position>BOF</position>
        <pronom_pattern>504746</pronom_pattern>
        <regex>(?s)\APGF</regex>
      </pattern>
    </signature>
    <details>
      <dc:description>Progressive Graphics Format (PGF) is an image format developed with a focus on speed rather than on compression ratio. It features both lossy (more than 10 without any visual quality loss) and lossless compression (about 3.1 according to the documentation), is based on a fast wavelet transform, and performs best with natural and aerial photos. In comparison with JPEG 2000, it has a slightly worse compression efficiency; however, JPEG 2000 is about 10 times slower than PGF.</dc:description>
      <dcterms:available>18 June 2006</dcterms:available>
      <dc:creator>xerania GmbH</dc:creator>
      <dcterms:publisher>libpgf.org</dcterms:publisher>
      <reference>
        <dcterms:title>PGF: A new progressive file format for lossy and lossless compression</dcterms:title>
        <dc:creator>Christoph Stamm</dc:creator>
        <dcterms:publisher>libpgf.org</dcterms:publisher>
        <dcterms:available></dcterms:available>
        <dc:identifier>http://www.libpgf.org/uploads/media/PGF_Overview_V1_01.pdf</dc:identifier>
        <dc:description>This is the initial presentation of PGF, describing the process used to create the file and summarizing the testing methodology.</dc:description>
        <dc:type>Authoratative</dc:type>
      </reference>
      <reference>
        <dcterms:title>PGF-Progressive Graphics File Version 6</dcterms:title>
        <dc:creator>Christoph Stamm</dc:creator>
        <dcterms:publisher>libpgf.org</dcterms:publisher>
        <dcterms:available></dcterms:available>
        <dc:identifier>http://www.libpgf.org/uploads/media/PGF_Header_ROI_V6_02.pdf</dc:identifier>
        <dc:description>This is documentation for the PGF Header Structure and ROI coding scheme.</dc:description>
        <dc:type>Authoratative</dc:type>       
      </reference>
      <record_metadata>
        <status>unknown</status>
        <dc:creator>L. Hurley and A. Ogier</dc:creator>
        <dcterms:created>01 Dec 2011</dcterms:created>
      </record_metadata>  
    </details>
  </format>
  <!-- ePub File format (ePub) -->
  <!-- contributed by Kris Dekeyser (LIBIS, Leuven, Belgium) -->
  <!--
  *** NOTE: commented out for the time being as the bugfix for container signatures
  *** which has been committed with version 1.1.8 seems to do the trick
  -->
  <!--
  <format>
    <puid>fmt/483</puid>
    <name>ePub format</name>
    <version>1.0</version>
    <alias>EPUB</alias>
    <mime>application/epub+zip</mime>
    <extension>epub</extension>
    <has_priority_over>x-fmt/263</has_priority_over>
    <has_priority_over>fmt/61</has_priority_over>
    <signature>
      <name>EPUB file</name>
      <pattern>
        <position>BOF</position>
        <regex>(?s)\APK\x03\x04</regex>
      </pattern>
      <pattern>
        <position>BOF</position>
        <regex>(?s)\A.{30}mimetypeapplication/epub\+zip</regex>
      </pattern>
    </signature>
    <details>
      <record_metadata>
        <status>unknown</status>
        <dc:creator>Kris Dekeyser (LIBIS, Leuven, Belgium)</dc:creator>
        <dcterms:created>09 July 2013</dcterms:created>
      </record_metadata>  
	</details>
  </format>
  -->
</formats>
